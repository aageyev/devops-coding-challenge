#!/usr/bin/env ansible-playbook
---
########################################################################################################################
# config local ssh key
########################################################################################################################
- name:         "configure ssh access"
  hosts:        localhost
  gather_facts: False
  vars_files:
    - "vars/aws_settings.yml"
  tasks:
    - name:      "create private ssh key from secrets"
      copy:
        content: "{{ aws.ssh_key }}"
        dest:    "{{ playbook_dir }}/ssh/{{ aws.ssh_key_name }}.pem"
        mode:    0600
########################################################################################################################
# launch instance
########################################################################################################################
- name:         "launching instance and adding it to configuration group"
  hosts:        localhost
  gather_facts: False
  vars_files:
    - "vars/aws_settings.yml"
  tasks:
    - name: "launch instance"
      ec2:
        key_name:         "{{ aws.ssh_key_name }}"
        region:           "{{ aws.region }}"
        aws_access_key:   "{{ aws.access_key_id }}"
        aws_secret_key:   "{{ aws.secret_access_key }}"
        instance_type:    "{{ aws.instance_type }}"
        image:            "{{ aws.instance_image }}"
        wait:             true
        wait_timeout:     300
        volumes:
          - device_name:  /dev/sda1
            volume_type:  gp2
            volume_size:  8
            delete_on_termination: true
        instance_tags:    '{"deployment":"devops-coding-challenge"}'
        # prepare Ubuntu 16.04 for ansible and fix self-resolv
        user_data:        |
                          #!/bin/bash
                          if grep -q $(hostname) /etc/hosts
                              then next
                              else sudo sed -i "s/127.0.0.1 localhost/127.0.0.1 localhost $(hostname)/g" /etc/hosts
                          fi
                          apt-get update -qq
                          apt-get install -qq python2.7
                          update-alternatives --install /usr/bin/python python /usr/bin/python2.7 1
      register: ec2

    - name: "add new instance to host group"
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: webserver
      with_items: "{{ ec2.instances }}"

    - name: "wait for ssh to come up"
      wait_for:
        host:     "{{ item.public_dns_name }}"
        port:     22
        delay:    60
        timeout:  320
        state:    started
      with_items: "{{ ec2.instances }}"
########################################################################################################################
# Configure instance and deploy app
########################################################################################################################
- name:          "configure instance"
  hosts:         webserver
  become:        yes
  become_method: sudo
  gather_facts:  True
  vars_files:
    - vars/settings.yml
  roles:
    - nginx
  tasks:
    - ping:
    - name:      "configure app version"
      copy:
        content: "{{ app_version }}"
        dest:    "/var/www/html/version.txt"
        group:   www-data
        owner:   www-data
        mode:    0644
